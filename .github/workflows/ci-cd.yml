name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        run: |
          cd Backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      - name: Run tests
        run: |
          cd Backend
          python -m pytest
        env:
          USE_MOCK_DB: 'true'
          DATABASE_URL: 'sqlite:///test.db'
          GCS_BUCKET: 'jtr-lift-u-4ever-cool-bucket'

  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'my-frontend/package-lock.json'
      - name: Install dependencies
        run: |
          cd my-frontend
          npm ci
      - name: Run linting
        run: |
          cd my-frontend
          npm run lint
      - name: Build frontend
        run: |
          cd my-frontend
          npm run build
        env:
          VITE_API_URL: 'https://my-python-backend-quyiiugyoq-ue.a.run.app'
          VITE_BUILD_TIMESTAMP: ${{ github.sha }}

  mobile-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Run mobile playback tests
        run: |
          cd tests
          chmod +x run-mobile-tests.sh
          ./run-mobile-tests.sh
        env:
          TEST_API_URL: 'https://my-python-backend-quyiiugyoq-ue.a.run.app'

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, mobile-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: toms-gym
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Deploy
        run: |
          python deploy.py --force-refresh
        env:
          TIMESTAMP: ${{ github.sha }} 